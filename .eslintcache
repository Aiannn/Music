[{"/Users/aiansoktoev/Development/code/Music/music_frontend/src/index.js":"1","/Users/aiansoktoev/Development/code/Music/music_frontend/src/App.js":"2","/Users/aiansoktoev/Development/code/Music/music_frontend/src/reportWebVitals.js":"3","/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/ArtistCard.js":"4","/Users/aiansoktoev/Development/code/Music/music_frontend/src/containers/ArtistContainer.js":"5","/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/NavBar.js":"6","/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/Profile.js":"7","/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/Playlist.js":"8","/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/SignUp.js":"9","/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/LogIn.js":"10","/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/Home.js":"11","/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/SongCard.js":"12","/Users/aiansoktoev/Development/code/Music/music_frontend/src/containers/ArtistPage.js":"13"},{"size":590,"mtime":1608953170590,"results":"14","hashOfConfig":"15"},{"size":3250,"mtime":1609626458488,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608768707593,"results":"17","hashOfConfig":"15"},{"size":738,"mtime":1609441473830,"results":"18","hashOfConfig":"15"},{"size":493,"mtime":1608865996601,"results":"19","hashOfConfig":"15"},{"size":4376,"mtime":1610559512462,"results":"20","hashOfConfig":"15"},{"size":3438,"mtime":1609451804065,"results":"21","hashOfConfig":"15"},{"size":967,"mtime":1609453018620,"results":"22","hashOfConfig":"15"},{"size":2142,"mtime":1609117572319,"results":"23","hashOfConfig":"15"},{"size":1638,"mtime":1609298414955,"results":"24","hashOfConfig":"15"},{"size":1206,"mtime":1609129015563,"results":"25","hashOfConfig":"15"},{"size":3219,"mtime":1609455278285,"results":"26","hashOfConfig":"15"},{"size":1178,"mtime":1609441530834,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xfng0s",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/aiansoktoev/Development/code/Music/music_frontend/src/index.js",[],["58","59"],"/Users/aiansoktoev/Development/code/Music/music_frontend/src/App.js",[],"/Users/aiansoktoev/Development/code/Music/music_frontend/src/reportWebVitals.js",[],"/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/ArtistCard.js",["60"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass ArtistCard extends React.Component {\n\n    render() {\n        return (\n            <Link to={{\n                pathname: `/artists/${this.props.artist.id}`,\n                state: { artistName: this.props.artist.name }\n            }}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '20px', marginTop: '20px' }}>\n                    <img style={{ borderRadius: '50%', width: 150, height: 150 }} src={this.props.artist.picture_big} />\n                    <span style={{ color: 'white' }}>{this.props.artist.name}</span>\n                </div>\n            </Link>\n        )\n    }\n}\n\nexport default ArtistCard","/Users/aiansoktoev/Development/code/Music/music_frontend/src/containers/ArtistContainer.js",[],"/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/NavBar.js",["61"],"/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/Profile.js",["62"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport { Tooltip } from 'react-bootstrap'\nimport { Modal } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { Form } from 'react-bootstrap'\n\nclass Profile extends React.Component {\n\n    state = {\n        show: false,\n        imageUrl: ''\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault()\n        this.props.updateAvatar(this.state.imageUrl)\n    }\n\n    changeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleClose = () => {\n        this.setState({\n            show: false\n        })\n    }\n\n    handleShow = () => {\n        this.setState({\n            show: true\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    this.props.user ?\n                        <React.Fragment>\n                            <div style={{ marginTop: 50, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                                <OverlayTrigger\n                                    overlay={<Tooltip id=\"tooltip-disabled\">Click to update your avatar!</Tooltip>}>\n                                    <img onClick={this.handleShow} style={{ width: 150, borderRadius: '50%' }} src={this.props.user.avatar ? this.props.user.avatar : '../../assets/EmptyUser.png'} />\n                                </OverlayTrigger>\n                                <span>{this.props.user.username}</span>\n                                <Link to='/playlist'>\n                                    <Button variant=\"dark\">Go to my Playlist</Button>{' '}\n                                </Link>\n                            </div>\n\n                            <Modal\n                                show={this.state.show}\n                                onHide={this.handleClose}\n                                backdrop=\"static\"\n                                keyboard={false}\n                            >\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Update Avatar</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <Form>\n                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                            <Form.Label>New Avatar:</Form.Label>\n                                            <Form.Control onChange={this.changeHandler} value={this.state.imageUrl} name='imageUrl' type=\"text\" placeholder=\"Image URL\" />\n                                        </Form.Group>\n                                    </Form>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={this.handleClose}>\n                                        Close\n                                </Button>\n                                    <Button variant=\"primary\" onClick={this.submitHandler}>Update</Button>\n                                </Modal.Footer>\n                            </Modal>\n                        </React.Fragment>\n\n                        :\n\n                        null\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Profile","/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/Playlist.js",[],"/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/SignUp.js",[],"/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/LogIn.js",[],"/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/Home.js",[],"/Users/aiansoktoev/Development/code/Music/music_frontend/src/components/SongCard.js",["63"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\n\nclass SongCard extends React.Component {\n\n    state = {\n        added: null\n    }\n\n    deleteFromPlaylist = () => {\n        fetch(`http://localhost:3000/songs/${this.props.song.id}`, {\n            method: 'DELETE'\n        })\n        window.location.reload()\n    }\n\n    addToPlaylist = () => {\n        fetch('http://localhost:3000/favorites', {\n            method: 'POST',\n            headers: {\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: document.querySelector('#username').innerHTML, //LOL, It's the best decision I suppose.\n                title: this.props.song.title,\n                artist: this.props.song.artist.name,\n                duration: this.props.song.duration,\n                preview: this.props.song.preview,\n                album_pic: this.props.song.album.cover_medium,\n                artist_deezer_id: this.props.song.artist.id\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({\n                    added: data\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '20px', marginTop: '20px' }}>\n                <img style={{ borderRadius: '50%', width: 200, height: 200 }} src={this.props.song.album ? this.props.song.album.cover_medium : this.props.song.album_pic} />\n                {/* either render from DeezerAPI or from Backend (line 31) */}\n                {this.props.song.album ?\n                    <span style={{ color: 'white' }}>{this.props.song.title}</span>\n                    :\n                    <Link to={{\n                        pathname: `/artists/${this.props.song.artist_deezer_id}`,\n                        state: { artistName: this.props.song.artist }\n                    }}>\n                        <span style={{ color: 'white' }}>{this.props.song.artist} - {this.props.song.title}</span>\n                    </Link>\n                }\n                <audio style={{ height: 45 }} src={this.props.song.preview} controls />\n\n                {localStorage.length > 0 ?\n                    <React.Fragment>\n                        {this.props.song.album ?\n                            <React.Fragment>\n                                {this.state.added ?\n                                    <Button variant='light' size='sm'>Added to Playlist</Button>\n                                    :\n                                    <Button onClick={this.addToPlaylist} variant='dark' size='sm'>Add to Playlist</Button>\n                                }\n                            </React.Fragment>\n                            :\n                            <Button onClick={this.deleteFromPlaylist} variant='dark' size='sm'>Delete from Playlist</Button>\n                        }\n                    </React.Fragment>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\n\nexport default SongCard","/Users/aiansoktoev/Development/code/Music/music_frontend/src/containers/ArtistPage.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":13,"column":21,"nodeType":"70","endLine":13,"endColumn":121},{"ruleId":"68","severity":1,"message":"69","line":43,"column":45,"nodeType":"70","endLine":43,"endColumn":140},{"ruleId":"68","severity":1,"message":"69","line":48,"column":37,"nodeType":"70","endLine":48,"endColumn":199},{"ruleId":"68","severity":1,"message":"69","line":46,"column":17,"nodeType":"70","endLine":46,"endColumn":174},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]